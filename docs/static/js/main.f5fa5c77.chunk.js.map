{"version":3,"sources":["home/home.module.css","editor/editor.module.css","home/banner.jsx","editor/plugins/format.js","editor/plugins/blockquote.js","editor/plugins/heading.js","hooks/use.esc.js","widgets/input.js","widgets/overlay/index.jsx","components/external.src.popup.jsx","editor/plugins/video.js","editor/plugins/soft.break.js","editor/plugins/link.js","editor/utils.js","editor/plugins/inline.toolbar.js","editor/plugins/code.js","editor/markdown.serializer.js","hooks/use.cache.js","editor/index.jsx","editor/plugins/utils.js","editor/plugins/image.js","home/toolbox.jsx","home/index.jsx","app.js","serviceWorker.js","index.js","widgets/overlay/overlay.module.css","home/banner.module.css"],"names":["module","exports","Banner","className","styles","banner","heading","target","rel","href","isBoldHotkey","isKeyHotkey","isItalicHotkey","isUnderlinedHotkey","isStrikeThroughHotkey","BoldButton","editor","style","isMarkActive","color","onClick","bold","ItalicButton","italic","isQuoteKey","isH1","isH2","isP","useEsc","cb","React","useEffect","escHandler","evt","key","document","addEventListener","removeEventListener","Input","onEnter","restProps","ref","useRef","input","current","Overlay","forwardRef","children","clickToClose","shouldClose","onClose","onOpen","autoOpen","useState","isOpen","setOpen","open","useCallback","close","stopPropagation","useImperativeHandle","ReactDom","createPortal","container","portal","contentHolder","body","ExternalSrcPopup","title","onDone","url","setUrl","error","setError","value","onChange","isUrl","disabled","Boolean","Video","node","attributes","isSelected","isFocused","getProviderUrl","match","videoId","queryString","assoc","keyValues","window","location","search","slice","split","decode","s","decodeURIComponent","replace","i","length","parseQueryString","v","provider","id","pop","isNormalVideo","video","data","get","setNodeByKey","type","Object","assign","toJS","maxWidth","height","textAlign","border","controls","src","allowFullScreen","frameBorder","softBreakPlugin","options","onKeyDown","event","change","next","shift","shiftKey","insertText","LinkButton","linkNode","isLink","showLinkBox","toggleLinkBox","toggleLink","console","log","updatedUrl","updateLink","linkContainer","linkBox","defaultValue","onBlur","placeholder","getVisibleSelectionRect","selection","getSelection","rangeCount","range","getRangeAt","collapsed","boundingRect","getBoundingClientRect","top","right","bottom","left","InlineToolbar","toolbarRef","frameId","isExpanded","requestAnimationFrame","selectionRect","sectionMidX","width","toolBarElemPos","setAttribute","cancelAnimationFrame","inlineToolbar","isCodeKey","formatsSyntax","text","strikeThrough","blockSyntax","paragraph","h1","h2","blockquote","image","alt","code","serializeBlock","blockNode","str","nodes","object","serializeInline","serializeText","linkText","map","join","textNode","marks","mark","cache","useCache","name","setValue","DevEditor","Value","fromJSON","setCache","plugins","useMemo","queries","markType","activeMarks","some","isBlockOfType","blockType","blocks","block","hasSelection","getCurrentBlockType","startBlock","underline","preventDefault","commands","toggleMark","replaceMark","renderMark","props","insertBlock","focus","setBlocks","renderBlock","onPaste","clipboardData","getData","moveAnchorTo","anchor","offset","moveEndTo","moveToEnd","args","unwrapInline","wrapInline","setInlines","inlines","find","inline","renderInline","schema","isVoid","insertImage","insertVideo","renderEditor","Fragment","metaKey","fontFamily","fontSize","padding","background","display","editorInterface","obj","markdown","slateJson","altText","quote","insertEmbedText","ToolBox","getEditor","showPopup","togglePopup","setType","extSrcs","openExtSrc","toolBox","tool","label","embed","embedExtSrc","Home","editorRef","contentContainer","widgetContainers","PublishSection","getMarkdown","isCopied","setCopied","publishBox","elem","createElement","appendChild","select","execCommand","setTimeout","App","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,OAAS,qBAAqB,iBAAmB,+BAA+B,OAAS,qBAAqB,iBAAmB,+BAA+B,UAAY,wBAAwB,WAAa,yBAAyB,QAAU,sBAAsB,KAAO,qB,mBCAvUD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,OAAS,uBAAuB,cAAgB,8BAA8B,gBAAkB,gCAAgC,cAAgB,8BAA8B,QAAU,0B,6GCGrP,SAASC,IACd,OACE,yBAAKC,UAAWC,IAAOC,QACrB,wBAAIF,UAAWC,IAAOE,SAAtB,cACA,yBAAKH,UAAU,WAAf,0CAEE,uBAAGI,OAAO,SAASC,IAAI,sBAAsBC,KAAK,gDAAlD,oB,0BCPFC,EAAeC,sBAAY,SAC3BC,EAAiBD,sBAAY,SAC7BE,EAAqBF,sBAAY,SACjCG,EAAwBH,sBAAY,SA+DnC,SAASI,EAAT,GAEH,IADFC,EACC,EADDA,OAOIC,EADaD,EAAOE,aAAa,QACd,CAAEC,MAAO,OAAU,GAE1C,OAAO,4BAAQF,MAAOA,EAAOG,QAPb,WACdJ,EAAOK,SAMF,KAGF,SAASC,EAAT,GAEH,IADFN,EACC,EADDA,OAMIC,EADaD,EAAOE,aAAa,UACd,CAAEC,MAAO,OAAU,GAE1C,OAAO,4BAAQF,MAAOA,EAAOG,QANb,WACdJ,EAAOO,WAKF,KCxFT,IAAMC,EAAab,sBAAY,SCA/B,IAAMc,EAAOd,sBAAY,SACnBe,EAAOf,sBAAY,SACnBgB,EAAMhB,sBAAY,SCHjB,SAASiB,EAAOC,GACrBC,IAAMC,UAAU,WACd,SAASC,EAAWC,GACF,WAAZA,EAAIC,KACNL,EAAGI,GAIP,OADAE,SAASC,iBAAiB,UAAWJ,GAC9B,kBAAMG,SAASE,oBAAoB,WAAYL,KACrD,CAACH,I,6BCTC,SAASS,EAAT,GAGH,IAAD,IAFDC,eAEC,MAFS,aAET,EADEC,EACF,2BAEGC,EAAMX,IAAMY,SAahB,OAXAZ,IAAMC,UAAU,WACd,IAAIY,EAAQF,EAAIG,QACZf,EAAK,SAACI,GACO,UAAZA,EAAIC,KACLK,EAAQN,IAIZ,OADAU,EAAMP,iBAAiB,UAAWP,GAC3B,kBAAMc,EAAMN,oBAAoB,UAAWR,KACjD,CAACU,IAGF,yCAAOE,IAAKA,GAASD,I,qBCdZK,EAAUf,IAAMgB,WAAW,WASrCL,GAAM,IARPM,EAQM,EARNA,SAQM,KAPNC,aAOM,EANNC,oBAMM,MANQ,kBAAM,GAMd,MALNC,eAKM,MALI,aAKJ,MAJNC,cAIM,MAJG,aAIH,MAHNhD,iBAGM,MAHM,GAGN,MAFNiD,gBAEM,SADHZ,EACG,qGACkBV,IAAMuB,SAASD,GADjC,mBACDE,EADC,KACOC,EADP,KAGAC,EAAO1B,IAAM2B,YAAY,WAC7BF,GAAQ,GACRJ,KACC,CAACA,IAEEO,EAAQ5B,IAAM2B,YAAY,SAAexB,GAC7CA,EAAI0B,kBACJV,KACAM,GAAQ,GACRL,KACC,CAACA,EAASD,IAiBb,OAdAnB,IAAM8B,oBAAoBnB,EAAK,iBAAM,CACnCe,KAAMA,EACNE,MAAOA,IACL,CAACF,EAAME,IAGX5B,IAAMC,UAAU,WACdyB,KACA,CAACA,IAEH5B,EAAO,SAACK,GACNyB,EAAMzB,KAGDqB,GAAUO,IAASC,aACxB,uCAAK3D,UAAS,UAAKC,IAAO2D,UAAZ,YAAyB5D,IAAiBqC,GACtD,yBAAKrC,UAAWC,IAAO4D,OAAQ5C,QAASsC,IACxC,yBAAKvD,UAAWC,IAAO6D,eAErBlB,IAIJZ,SAAS+B,QCjDN,SAASC,EAAT,GAGJ,IAAD,IAFAC,aAEA,MAFQ,GAER,MADAC,cACA,MADS,aACT,IACoBvC,IAAMuB,SAAS,IADnC,mBACKiB,EADL,KACUC,EADV,OAEwBzC,IAAMuB,SAAS,IAFvC,mBAEKmB,EAFL,KAEYC,EAFZ,KAaA,OACE,kBAAC,EAAD,CAASvB,QAASmB,GAChB,yBAAKlE,UAAU,QACb,4BAAKiE,GACL,kBAAC9B,EAAD,CAAOoC,MAAOJ,EAAKK,SAbzB,SAAwB1C,GACtB,IAAIqC,EAAMrC,EAAI1B,OAAOmE,MAClBE,IAAMN,GACPC,EAAOD,GAEPG,EAAS,kBAULD,GACA,uBAAGrE,UAAU,SAASqE,GAExB,4BAAQK,SAAUC,QAAQN,GAAQpD,QAAS,kBAAMiD,EAAOC,KAAxD,UCcR,SAASS,EAAT,GAMI,IALF/D,EAKC,EALDA,OACAgE,EAIC,EAJDA,KACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,WACAC,EACC,EADDA,UAoBA,IAAMC,EAAiBtD,IAAM2B,YAAY,SAACa,GACxC,GAAGA,EAAIe,MAAM,oCAAqC,CAChD,IACIC,EApBR,SAA0BC,GAOxB,IANA,IAAIC,EAAQ,GACRC,GAAaF,GAAeG,OAAOC,SAASC,QAAQC,MAAM,GAAGC,MAAM,KACnEC,EAAS,SAASC,GACpB,OAAOC,mBAAmBD,EAAEE,QAAQ,MAAO,OAGpCC,EAAI,EAAGA,EAAIV,EAAUW,SAAUD,EAAG,CACzC,IAAIjE,EAAMuD,EAAUU,GAAGL,MAAM,KACzB5D,EAAIkE,OAAS,IACfZ,EAAMO,EAAO7D,EAAI,KAAO6D,EAAO7D,EAAI,KAIvC,OAAOsD,EAKUa,CAAiB,IAAD,OAAK/B,EAAIwB,MAAM,KAAK,KAC5BQ,EACvB,MAAO,CAAEhC,IAAI,iCAAD,OAAmCgB,EAAnC,iBAA2DiB,SAAU,UAAWC,GAAIlB,GAC3F,GAAGhB,EAAIe,MAAM,wCAAyC,CAC3D,IAAIC,EAAUhB,EAAIwB,MAAM,KAAKW,MAC7B,MAAO,CAAEnC,IAAI,2CAAD,OAA6CgB,GAAWiB,SAAU,cAAeC,GAAIlB,GAC5F,GAAGhB,EAAIe,MAAM,kCAAmC,CACrD,IAAIC,EAAUhB,EAAIwB,MAAM,KAAKW,MAC7B,MAAO,CAAEnC,IAAI,kCAAD,OAAoCgB,GAAWiB,SAAU,QAASC,GAAIlB,GAGpF,MAAO,CAAEhB,MAAKoC,eAAe,IAC5B,IAGH5E,IAAMC,UAAU,WACd,IAAI4E,EAAQvB,EAAeJ,EAAK4B,KAAKC,IAAI,QACzC7F,EAAO8F,aAAa9B,EAAK9C,IACrB,CACE6E,KAAM,QACNH,KAAMI,OAAOC,OACXjC,EAAK4B,KAAKM,OACV,CAACV,GAAIG,EAAMH,GAAID,SAAUI,EAAMJ,cAItC,IAEH,IAAItF,EAAQ,CACVkG,SAAU,OACVC,OAAQ,OACRC,UAAW,UAEbpG,EAASiE,GAAcC,EAAa6B,OAAOC,OAAOhG,EAAO,CACvDqG,OAAQ,kBACLrG,EAEL,IAAI0F,EAAQvB,EAAeJ,EAAK4B,KAAKC,IAAI,QAEzC,OACE,uCAAK5F,MAAOA,GAAWgE,GAEnB0B,EAAMD,cAEF,2BAAOa,UAAQ,GACb,4BAAQC,IAAKb,EAAMrC,OAIrB,4BAAQF,MAAM,WAAWoD,IAAKb,EAAMrC,IAAKmD,iBAAe,EAACC,YAAa,K,qBCzH3E,SAASC,IAA+B,IAAfC,EAAc,uDAAJ,GACxC,MAAO,CACLC,UADK,SACKC,EAAOC,EAAQC,GACvB,MAAkB,UAAdF,EAAM5F,IAAwB8F,IAC9BJ,EAAQK,QAA4B,IAAnBH,EAAMI,SAA2BF,IAC/CD,EAAOI,WAAW,QCsDxB,SAASC,EAAT,GAEH,IADFpH,EACC,EADDA,OAEIqH,EAAWrH,EAAOsH,SADrB,EAEkCxG,IAAMuB,UAAS,GAFjD,mBAEIkF,EAFJ,KAEiBC,EAFjB,KAQD,SAASC,IAGPD,GAAeD,GAGjB,SAAShE,EAAOtC,GACdyG,QAAQC,IAAI,aAAc1G,EAAI1B,OAAOmE,OACrC,IAAIkE,EAAa3G,EAAI1B,OAAOmE,OACxB2D,GAAYO,EACd5H,EAAOyH,WAAW,CAChBnE,IAAKsE,IAEAP,IAAaO,EACpB5H,EAAOyH,aACAJ,GACPrH,EAAO6H,WAAW,CAChBvE,IAAKsE,IAGTH,IAGF,OACE,yBAAKtI,UAAWC,IAAO0I,eACrB,4BAAQ1H,QAASqH,GAAjB,QAEEF,GACA,yBAAKpI,UAAWC,IAAO2I,SACrB,kBAACzG,EAAD,CACEC,QAASgC,EACTyE,aAlCDX,EAAWA,EAASzB,KAAKC,IAAI,OAAS,GAmCrCoC,OAAQ1E,EACR2E,YAAY,gBCtGjB,IAAMC,EAA0B,WACrC,IAAMC,EAAY1D,OAAO2D,eACzB,IAAKD,EAAUE,WACb,OAAO,KAGT,IAAMC,EAAQH,EAAUI,WAAW,GACnC,GAAID,EAAME,UACR,OAAO,KAET,IAAMC,EAAeH,EAAMI,wBACnBC,EAA6BF,EAA7BE,IAAKC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATK,KAE5B,OAAY,IAARH,GAAuB,IAAVC,GAA0B,IAAXC,GAAyB,IAATC,EACvC,KAGFL,GCeT,SAASM,EAAT,GAEI,IADFhJ,EACC,EADDA,OAEIiJ,EAAanI,IAAMY,SA2BvB,OAzBAZ,IAAMC,UAAU,WACd,IAAImI,EAAU,KAiBd,OAhBKlJ,EAAO0D,MAAM0E,UAAUe,WAG1BD,EAAUE,sBAAsB,WAC9B,IAAIC,EAAgBlB,IACpB,GAAKkB,EAAL,CACA,IAAIC,EAAcD,EAAcN,KAAQM,EAAcE,MAAQ,EAC1DC,EAAiBP,EAAWrH,QAAQ+G,wBACpCC,EAAMS,EAAcT,KAAOY,EAAepD,OAAS,IACnD2C,EAAOO,EAAeE,EAAeD,MAAQ,EAE7CN,EAAWrH,SACbqH,EAAWrH,QAAQ6H,aAAa,QAAhC,eAAiDV,EAAjD,oBAAiEH,EAAjE,sBAXJK,EAAWrH,QAAQ6H,aAAa,QAAhC,qCAeK,kBAAMC,qBAAqBR,MAGpCtI,EAAOE,IAAM2B,YAAY,WACvBwG,EAAWrH,QAAQ6H,aAAa,QAAhC,sCACC,KAGD,yBAAKhI,IAAKwH,EAAY9J,UAAWC,IAAOuK,eACtC,kBAAC5J,EAAD,CAAYC,OAAQA,IACpB,kBAACM,EAAD,CAAcN,OAAQA,IAGtB,kBAACoH,EAAD,CAAYpH,OAAQA,KCjE1B,IAAM4J,EAAYjK,sBAAY,eCH9B,IAAMkK,EAAgB,CACpBxJ,KAAM,SAACyJ,GAAD,kBAAeA,EAAf,OACNvJ,OAAQ,SAACuJ,GAAD,iBAAcA,EAAd,MAERC,cAAe,SAACD,GAAD,iBAAcA,EAAd,OAGXE,EAAc,CAClBC,UAAW,SAACH,GAAD,OAAWA,EAAO,MAC7BI,GAAI,SAACJ,GAAD,MAAW,KAAOA,EAAO,MAC7BK,GAAI,SAACL,GAAD,MAAW,KAAOA,EAAO,MAC7BM,WAAY,SAACN,GAAD,MAAW,IAAMA,EAAO,MACpCO,MAAO,SAACP,EAAM9F,GACZ,MAAM,KAAN,OAAYA,EAAK4B,KAAK0E,IAAtB,aAA8BtG,EAAK4B,KAAKY,IAAxC,SAEF+D,KAAM,SAACT,GACL,MAAO,QAAUA,EAAO,WAE1BnE,MAAO,SAACmE,EAAM9F,GACZ,MAAM,MAAN,OAAaA,EAAK4B,KAAKL,SAAvB,YAAmCvB,EAAK4B,KAAKJ,GAA7C,YAaJ,SAASgF,EAAeC,GACtB,IAAIC,EAAM,GADuB,uBAEjC,YAAiBD,EAAUE,MAA3B,+CAAkC,CAAC,IAA1B3G,EAAyB,QAChC0G,GAA6B,WAAhB1G,EAAK4G,OAAsBC,EAAgB7G,GAAQ8G,EAAc9G,IAH/C,kFAKjC,OAAOgG,EAAYS,EAAU1E,MAAM2E,EAAKD,GAG1C,SAASI,EAAgB7G,GACvB,IAAI0G,EAAG,GACP,GAAiB,SAAd1G,EAAK+B,KAAiB,CACvB,IAAIgF,EAAW/G,EAAK2G,MAAMK,IAAIF,GAAeG,KAAK,IAClDP,EAAG,WAAOK,EAAP,aAAoB/G,EAAK4B,KAAKtC,IAA9B,KAEL,OAAOoH,EAGT,SAASI,EAAcI,GACrB,IAAIR,EAAMQ,EAASpB,KADY,uBAE/B,aAAiBoB,EAASC,OAAS,IAAnC,+CAAuC,CAAC,IAA/BC,EAA8B,QACrCV,EAAMb,EAAcuB,EAAKrF,MAAM2E,IAHF,kFAK/B,OAAOA,ECpDT,IAAMW,EAAQ,GACP,SAASC,EAASC,GACvB,IAAMC,EAAW1K,IAAM2B,YAAY,SAAkBiB,GACtC,OAAVA,SACM2H,EAAME,GAEbF,EAAME,GAAQ7H,GAEf,CAAC6H,IAIJ,MAAO,CAHUzK,IAAM2B,YAAY,WACjC,OAAO4I,EAAME,IACZ,CAACA,IACcC,GCSpB,IAAMxD,EAAe,CACnB,OAAU,QACV,SAAY,CACV,OAAU,WACV,MAAS,CACP,CACE,OAAU,QACV,KAAQ,YACR,MAAS,CACP,CACE,OAAU,OACV,KAAQ,SAQPyD,EAAY3K,IAAMgB,WAAW,WAEvCL,GAAM,IADPyG,EACM,EADNA,YACM,EACkB7F,mBAASqJ,IAAMC,SAAS3D,IAD1C,mBACDtE,EADC,KACM8H,EADN,OAEqBF,EAAS,UAF9B,mBAESM,GAFT,WAGF5L,EAASc,IAAMY,SAEbmK,EAAU/K,IAAMgL,QAAQ,iBAAM,CChD7B,CACLC,QAAS,CACP7L,aAAc,SAACF,EAAQgM,GACrB,OAAOhM,EAAO0D,MAAMuI,YAAYC,KAAK,SAAAd,GAAI,OAAIA,EAAKrF,OAASiG,KAE7DG,cAAe,SAAkBnM,EAAQoM,GACvC,OAAOpM,EAAO0D,MAAM2I,OAAOH,KAAK,SAAAI,GAAK,OAAIA,EAAMvG,OAASqG,KAE1DG,aAPO,SAOMvM,GAEX,OAAOA,EAAO0D,MAAM0E,UAAUe,YAEhCqD,oBAXO,SAWaxM,GAClB,OAAOA,EAAO0D,MAAM+I,WAAazM,EAAO0D,MAAM+I,WAAW1G,KAAO,MhBL/D,CACLc,UAAW,SAAC5F,EAAKjB,EAAQgH,GACvB,GAAItH,EAAauB,GACfyG,QAAQC,IAAI,4BAA6B1G,EAAIC,KAC7ClB,EAAOK,YACF,GAAIT,EAAeqB,GACxBjB,EAAOO,cACF,GAAIV,EAAmBoB,GAC5BjB,EAAO0M,gBACF,KAAI5M,EAAsBmB,GAI/B,OAAO+F,IAHP/F,EAAI0L,iBACJ3M,EAAO+J,kBAKX6C,SAAU,CACRvM,KAAM,SAAAL,GACJA,EAAO6M,WAAW,SAEpBtM,OAAQ,SAAAP,GACNA,EAAO6M,WAAW,WAEpBH,UAAW,SAAA1M,GACTA,EAAO6M,WAAW,cAEpB9C,cAAe,SAAA/J,GACbA,EAAO6M,WAAW,kBAEpB1M,MAAO,SAACH,EAAQG,GACdH,EAAO8M,YACL,CAAE/G,KAAM,SACR,CACEA,KAAM,QACNH,KAAM,CACJzF,aAMV4M,WAzCK,SAyCMC,EAAOhN,EAAQgH,GAAO,IACzBoE,EAA+B4B,EAA/B5B,KAAMrJ,EAAyBiL,EAAzBjL,SAAUkC,EAAe+I,EAAf/I,WACtB,OAAQmH,EAAKrF,MACX,IAAK,OACH,OAAO,sBAAO9B,EAAalC,GAC7B,IAAK,SACH,OAAO,uBAAQkC,EAAalC,GAC9B,IAAK,YACH,OAAO,sBAAOkC,EAAalC,GAC7B,IAAK,gBACH,OAAO,2BAAYkC,EAAalC,GAClC,QACE,OAAOiF,OCxDR,CACLH,UAAW,SAAC5F,EAAKjB,EAAQgH,GACvB,GACc,UAAZ/F,EAAIC,MACa,IAAjBD,EAAIiG,UAC6B,eAAjClH,EAAOwM,sBACPxM,EAAOiN,YAAY,iBACd,KAAIzM,EAAWS,GAMpB,OAAO+F,IALP/F,EAAI0L,iBACJ3M,EACGkN,QACA9C,eAKPwC,SAAU,CACRxC,WAAY,SAAApK,GAC2B,eAAjCA,EAAOwM,sBACTxM,EAAOmN,UAAU,aAEjBnN,EAAOmN,UAAU,gBAIvBC,YAzBK,SAyBOJ,EAAOhN,EAAQgH,GAAO,IAC1BhD,EAA+BgJ,EAA/BhJ,KAAMjC,EAAyBiL,EAAzBjL,SAAUkC,EAAe+I,EAAf/I,WAMtB,MAAqB,eAAdD,EAAK+B,KACV,gDAAgB9B,EAAhB,CAA4BhE,MANlB,CACV,cAAe,uBACf,MAAS,UACT,QAAW,iBAGgC8B,GAC3CiF,MChCC,CACLH,UADK,SACK5F,EAAKjB,EAAQgH,GACjBvG,EAAKQ,IACPA,EAAI0L,iBACJ3M,EAAOoD,MAAM,OACJ1C,EAAKO,IACdA,EAAI0L,iBACJ3M,EAAOoD,MAAM,OACJzC,EAAIM,IACbA,EAAI0L,iBACJ3M,EAAOoD,MAAM,cAEb4D,KAGJ4F,SAAU,CACRxJ,MADQ,SACFpD,EAAQ+F,GACW/F,EAAOwM,wBACLzG,EACvB/F,EACGkN,QACAC,UAAU,aAEbnN,EACGkN,QACAC,UAAUpH,KAInBqH,YA7BK,SA6BOJ,EAAOhN,EAAQgH,GAAO,IAC1BhD,EAA+BgJ,EAA/BhJ,KAAMjC,EAAyBiL,EAAzBjL,SAAUkC,EAAe+I,EAAf/I,WAEtB,OAAQD,EAAK+B,MACX,IAAK,KACH,OAAO,uBAAQ9B,EAAalC,GAC9B,IAAK,KACH,OAAO,uBAAQkC,EAAalC,GAC9B,QACE,OAAOiF,OOtCR,CACLqG,QADK,SACGpM,EAAKjB,EAAQgH,GACnB,IAAI1D,GAAOrC,EAAIqM,eAAiB5I,OAAO4I,eAAeC,QAAQ,QAC9D,IAAI3J,IAAMN,GACR,OAAO0D,IAGThH,EACGmH,WAAW7D,GACXkK,aAAaxN,EAAO0D,MAAM0E,UAAUqF,OAAOC,OAASpK,EAAI8B,QACxDuI,UAAU3N,EAAO0D,MAAM0E,UAAU8E,MAAMQ,QACvCjG,WAAWnE,GACXsK,aAELhB,SAAU,CACRnF,WADQ,SACGzH,EAAQ6N,GACd7N,EAAOsH,SACRtH,EAAO8N,aAAa,QACbD,GAAQjK,IAAMiK,EAAKvK,MAC1BtD,EAAO+N,WAAW,CAChBhI,KAAM,OACNH,KAAM,CACJtC,IAAKuK,EAAKvK,QAKlBuE,WAbQ,SAaG7H,EAAQ6N,GACd7N,EAAOsH,UACRtH,EAAOgO,WAAW,CAChBpI,KAAM,CACJtC,IAAKuK,EAAKvK,SAMpByI,QAAS,CACPzE,OADO,SACAtH,GACL,OAAOA,EAAO0D,MAAMuK,QAAQC,KAAK,SAAAC,GAAM,MAAoB,SAAhBA,EAAOpI,SAGtDqI,aA1CK,WA0CwCpO,EAAQgH,GAAO,IAA7ChD,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,WAAYlC,EAA0B,EAA1BA,SAC/B,MAAiB,SAAdiC,EAAK+B,KACC,qCAAG9F,MAAO,CAACE,MAAO,OAAQV,KAAMuE,EAAK4B,KAAKC,IAAI,QAAY5B,GAAalC,GAEzEiF,MMCTL,EAAgB,CAAEM,OAAO,IE/CpB,CACLoH,OAAQ,CACNhC,OAAQ,CACNhC,MAAO,CACLiE,QAAQ,KAIdzH,UARK,SAQK5F,EAAKjB,EAAQgH,GACrB,GAAe,UAAZ/F,EAAIC,KAAmBlB,EAAOmM,cAAc,SAC7C,OAAOnM,EAAOiN,YAAY,aAAaC,QAEzClG,KAEF4F,SAAU,CACR2B,YADQ,SACIvO,EAAQ6N,GACfA,GAAQjK,IAAMiK,EAAKrH,MACpBxG,EAAOiN,YAAY,CACjBlH,KAAM,QACNH,KAAM,CACJ0E,IAAKuD,EAAKvD,IACV9D,IAAKqH,EAAKrH,OAGb0G,UAIPE,YA5BK,WA4BoDpN,EAAQgH,GAAO,IAA1DhD,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,UAC1C,GAAiB,UAAdH,EAAK+B,KAAkB,CACxB,IAAI9F,EAAQ,CACVkG,SAAU,OACVC,OAAQ,QAKV,OAHAnG,EAASiE,GAAcC,EAAa6B,OAAOC,OAAOhG,EAAO,CACvDqG,OAAQ,kBACLrG,EACE,uCAAKA,MAAOA,EAAOqK,IAAKtG,EAAK4B,KAAKC,IAAI,OAAQW,IAAKxC,EAAK4B,KAAKC,IAAI,QAAY5B,IAEtF,OAAO+C,MVvCJ,CACLqH,OAAQ,CACNhC,OAAQ,CACN1G,MAAO,CACL2I,QAAQ,KAIdzH,UARK,SAQK5F,EAAKjB,EAAQgH,GACrB,GAAe,UAAZ/F,EAAIC,KAAmBlB,EAAOmM,cAAc,SAC7C,OAAOnM,EAAOiN,YAAY,aAAaC,QAEzClG,KAEF4F,SAAU,CACR4B,YADQ,SACIxO,EAAQ6N,GACfA,GAAQjK,IAAMiK,EAAKrH,MACpBxG,EAAOiN,YAAY,CACjBlH,KAAM,QACNH,KAAM,CACJ0E,IAAKuD,EAAKvD,IACV9D,IAAKqH,EAAKrH,OAGb0G,UAIPE,YA5BK,SA4BOJ,EAAOhN,EAAQgH,GACzB,MAAuB,UAApBgG,EAAMhJ,KAAK+B,KACL,kBAAChC,EAAD,iBAAWiJ,EAAX,CAAkBhN,OAAQA,KAE5BgH,MIrBJ,CACLyH,aADK,SACQzB,EAAOhN,EAAQgH,GAC1B,IAAMjF,EAAWiF,IACjB,OACE,kBAAC,IAAM0H,SAAP,KACE,kBAAC1F,EAAD,CAAehJ,OAAQA,IACtB+B,KCnBF,CACL8E,UAAW,SAAC5F,EAAKjB,EAAQgH,GACvB,GACc,UAAZ/F,EAAIC,MACY,IAAhBD,EAAI0N,SACJ3O,EAAOmM,cAAc,QACrBnM,EAAOmH,WAAW,WACb,GACO,UAAZlG,EAAIC,MACY,IAAhBD,EAAI0N,SACJ3O,EAAOmM,cAAc,QACnBnM,EACGiN,YAAY,aACZC,YACA,KAAItD,EAAU3I,GAMnB,OAAO+F,IALP/F,EAAI0L,iBACJ3M,EACGkN,QACA3C,SAKPqC,SAAU,CACRrC,KADQ,SACHvK,EAAQ6N,GACR7N,EAAOmM,cAAc,QACtBnM,EAAOmN,UAAU,CACfpH,KAAM,YACNH,KAAM,KACLsH,QAEHlN,EACGiN,YAAY,QACZC,UAITE,YArCK,WAqCuCpN,EAAQgH,GAAO,IAA7ChD,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,WAAYlC,EAA0B,EAA1BA,SAC9B,MAAiB,SAAdiC,EAAK+B,KAQC,wCAAM9F,MAPD,CACV2O,WAAY,YACZC,SAAU,OACVC,QAAS,cACTC,WAAY,OACZC,QAAS,UAEoB/K,GAAalC,GAEvCiF,QGOR,IAOH,IAAMiI,EAAkBnO,IAAMgL,QAAQ,WACpC,IAAIoD,EAAM,CACRC,SAAU,kBF/CT,SAAkBC,GACvB,IAAI1E,EAAM,GADwB,uBAElC,YAAiB0E,EAAUjO,SAASwJ,MAApC,+CAA2C,CACzCD,GAAYF,EAD6B,UAFT,kFAMlC,OADA9C,QAAQC,IAAI,kBAAmB+C,GACxBA,EEyCayE,CAASzL,EAAMwC,SAC/BqI,YAAa,SAACjL,GAAuB,IAAlB+L,EAAiB,uDAAP,GAC3BrP,EAAO4B,QACJsL,QACAqB,YAAY,CACX/H,IAAKlD,EACLgH,IAAK+E,KAGXb,YAAa,SAAClL,GACZtD,EAAO4B,QACJsL,QACAsB,YAAY,CACXhI,IAAKlD,KAGX4G,GAjBQ,WAkBNlK,EAAO4B,QACJsL,QACA9J,MAAM,OAEX+G,GAtBQ,WAuBNnK,EAAO4B,QACJsL,QACA9J,MAAM,OAEXkM,MA3BQ,WA4BNtP,EAAO4B,QACJsL,QACA9C,cAELG,KAhCQ,WAiCNvK,EAAO4B,QACJsL,QACA3C,QAELgF,gBArCQ,SAqCQzF,GACd9J,EAAO4B,QACJsL,QACAD,YAAY,aACZC,QACA/F,WAAW2C,KAKlB,OAFApC,QAAQC,IAAI,2BACZiE,EAASsD,GACFA,GACN,CAACxL,EAAO1D,EAAQ4L,IAQnB,OAJA9K,IAAM8B,oBAAoBnB,EAAK,WAC7B,OAAOwN,IAIP,kBAAC,IAAD,CACExN,IAAKzB,EACLkI,YAAaA,EACb/I,UAAWC,IAAOY,OAClB2D,SAnEJ,SAAkBoD,GAEhByE,EAASzE,EAAOrD,QAkEdA,MAAOA,EACPmI,QAASA,M,iBG3HR,SAAS2D,IAAW,IAAD,EACNlE,EAAS,UAAtBmE,EADmB,sBAEO3O,IAAMuB,UAAS,GAFtB,mBAEnBqN,EAFmB,KAERC,EAFQ,OAGF7O,IAAMuB,SAAS,IAHb,mBAGnB0D,EAHmB,KAGb6J,EAHa,KAKlBC,EACG,QADHA,EAEG,QA8EHC,EAAa,SAAC/J,GAClB6J,EAAQ7J,GACR4J,GAAY,IAOd,OACE,yBAAKxQ,UAAS,eAAUC,IAAO2Q,UAC7B,yBACE3M,MAAM,SACNjE,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAAMqP,IAAYvF,OAH7B,MAIA,yBACE9G,MAAM,SACNjE,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAAMqP,IAAYtF,OAH7B,MAIA,yBACE/G,MAAM,SACNjE,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAAMqP,IAAYH,UAH7B,SAIA,yBACElM,MAAM,eACNjE,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAAMqP,IAAYlF,SAH7B,QAIA,yBACEnH,MAAM,eACNjE,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAAM0P,EAAWD,KAH5B,OAIA,yBACEzM,MAAM,eACNjE,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAAM0P,EAAWD,KAH5B,SA1GW,CACb,CACErK,GAAI,MACJyK,MAAO,MACPnG,KAAM,oBAER,CACEtE,GAAI,SACJyK,MAAO,SACPnG,KAAM,sBAER,CACEtE,GAAI,OACJyK,MAAO,QACPnG,KAAM,oBAER,CACEtE,GAAI,SACJyK,MAAO,SACPnG,KAAM,4BAER,CACEtE,GAAI,UACJyK,MAAO,UACPnG,KAAM,uBAER,CACEtE,GAAI,cACJyK,MAAO,eACPnG,KAAM,8BAER,CACEtE,GAAI,WACJyK,MAAO,YACPnG,KAAM,+CAER,CACEtE,GAAI,SACJyK,MAAO,SACPnG,KAAM,sBAER,CACEtE,GAAI,UACJyK,MAAO,UACPnG,KAAM,4BAER,CACEtE,GAAI,YACJyK,MAAO,YACPnG,KAAM,8BAER,CACEtE,GAAI,aACJyK,MAAO,cACPnG,KAAM,gCAyDGkB,IAAI,SAAAkF,GAAK,OACd,yBACE9M,MAAO8M,EAAM1K,GACbrG,UAAWC,IAAO4Q,KAClB5P,QAAS,kBAnCC,SAAC8P,GACnBT,IAAYF,gBAAgBW,EAAMpG,MAkCXqG,CAAYD,KAASA,EAAMD,SAI9CP,GACA,kBAACvM,EAAD,CAAkBC,MAAK,gBAAW2C,EAAX,QAAuB1C,OA9DrC,SAACC,GACd,IAAIA,EACF,OAAOqM,GAAY,GAErB,OAAO5J,GACL,KAAK8J,EACHJ,IAAYlB,YAAYjL,GACxB,MACF,KAAKuM,EACHJ,IAAYjB,YAAYlL,GAK5BqM,GAAY,OClFT,SAASS,IACd,IAAIC,EAAYvP,IAAMY,SAMtB,OACE,yBAAKvC,UAAWC,IAAO2D,WACrB,kBAAC7D,EAAD,MACA,yBAAKC,UAAWC,IAAOkR,kBACrB,yBAAKnR,UAAWC,IAAOmR,kBACrB,kBAACf,EAAD,OAEF,yBAAKrQ,UAAWC,IAAOY,QACrB,kBAAC,EAAD,CAAWyB,IAAK4O,EAAWnI,YAAY,4BAEzC,yBAAK/I,UAAWC,IAAOmR,kBACrB,kBAACC,GAAD,CAAgBC,YAfxB,WACE,OAAOJ,EAAUzO,QAAQuN,iBAqB7B,SAASqB,GAAT,GAEI,IADFC,EACC,EADDA,YACC,EAE2B3P,IAAMuB,UAAS,GAF1C,mBAEIqO,EAFJ,KAEcC,EAFd,KAkBD,OACE,yBAAKxR,UAAS,eAAUC,IAAOwR,aAC7B,4BAAQxQ,QAhBZ,WACE,IAAIsK,EAAM+F,IACNI,EAAO1P,SAAS2P,cAAc,YAClCD,EAAKnN,MAAQgH,EACbmG,EAAKpH,aAAa,QAAS,+BAC3BtI,SAAS+B,KAAK6N,YAAYF,GAC1BA,EAAKG,SACL7P,SAAS8P,YAAY,QACrBN,GAAU,GACVO,WAAW,WACTP,GAAU,IACT,OAMED,EAAW,sBAAwB,qBC3C7BS,OARf,WACE,OACE,kBAAC,IAAMzC,SAAP,KACE,kBAAC0B,EAAD,QCGctM,QACW,cAA7BY,OAAOC,SAASyM,UAEe,UAA7B1M,OAAOC,SAASyM,UAEhB1M,OAAOC,SAASyM,SAAS/M,MACvB,2DCZNgN,IAASC,OAAO,kBAAC,GAAD,MAASnQ,SAASoQ,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,mBElInB7S,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,cAAgB,iC,mBCA1GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B","file":"static/js/main.f5fa5c77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__Xm6f-\",\"banner\":\"home_banner__3fV7u\",\"contentContainer\":\"home_contentContainer__3htk6\",\"editor\":\"home_editor__c3QrC\",\"widgetContainers\":\"home_widgetContainers__3RKmK\",\"shortCuts\":\"home_shortCuts__1PZXi\",\"publishBox\":\"home_publishBox__kBFiH\",\"toolBox\":\"home_toolBox__2Khvd\",\"tool\":\"home_tool__3O97n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorContainer\":\"editor_editorContainer__28KnZ\",\"editor\":\"editor_editor__2P-7D\",\"inlineToolbar\":\"editor_inlineToolbar__d4jvG\",\"placeholderMenu\":\"editor_placeholderMenu__34Ohc\",\"linkContainer\":\"editor_linkContainer__2_-iC\",\"linkBox\":\"editor_linkBox__3bLdD\"};","import React from 'react';\n\nimport styles from './banner.module.css';\n\nexport function Banner() {\n  return (\n    <div className={styles.banner}>\n      <h4 className={styles.heading}>Dev Editor</h4>\n      <div className=\"content\">\n        Editor for easily writing dev.to blogs.\n        <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://github.com/saravanan10393/dev-editor\">Fork in Github</a>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport { isKeyHotkey } from \"is-hotkey\";\n\nconst isBoldHotkey = isKeyHotkey(\"mod+b\");\nconst isItalicHotkey = isKeyHotkey(\"mod+i\");\nconst isUnderlinedHotkey = isKeyHotkey(\"mod+u\");\nconst isStrikeThroughHotkey = isKeyHotkey(\"mod+l\");\n\nexport function formatPlugin() {\n  return {\n    onKeyDown: (evt, editor, next) => {\n      if (isBoldHotkey(evt)) {\n        console.log(\"key down event is calling\", evt.key);\n        editor.bold();\n      } else if (isItalicHotkey(evt)) {\n        editor.italic();\n      } else if (isUnderlinedHotkey(evt)) {\n        editor.underline();\n      } else if (isStrikeThroughHotkey(evt)) {\n        evt.preventDefault();\n        editor.strikeThrough();\n      } else {\n        return next();\n      }\n    },\n    commands: {\n      bold: editor => {\n        editor.toggleMark(\"bold\");\n      },\n      italic: editor => {\n        editor.toggleMark(\"italic\");\n      },\n      underline: editor => {\n        editor.toggleMark(\"underline\");\n      },\n      strikeThrough: editor => {\n        editor.toggleMark(\"strikeThrough\");\n      },\n      color: (editor, color) => {\n        editor.replaceMark(\n          { type: \"color\" },\n          {\n            type: \"color\",\n            data: {\n              color\n            }\n          }\n        );\n      }\n    },\n    renderMark(props, editor, next) {\n      let { mark, children, attributes } = props;\n      switch (mark.type) {\n        case \"bold\":\n          return <b {...attributes}>{children}</b>;\n        case \"italic\":\n          return <em {...attributes}>{children}</em>;\n        case \"underline\":\n          return <u {...attributes}>{children}</u>;\n        case \"strikeThrough\":\n          return <strike {...attributes}>{children}</strike>;\n        default:\n          return next();\n      }\n    }\n  };\n}\n\n\nexport function BoldButton({\n  editor\n}) {\n  const onClick = () => {\n    editor.bold();\n  }\n\n  const isActive = editor.isMarkActive('bold');\n  let style = isActive ? { color: \"red\" } : {};\n\n  return <button style={style} onClick={onClick}>B</button>\n}\n\nexport function ItalicButton({\n  editor\n}) {\n  const onClick = () => {\n    editor.italic();\n  }\n  const isActive = editor.isMarkActive('italic');\n  let style = isActive ? { color: \"red\" } : {};\n\n  return <button style={style} onClick={onClick}>I</button>\n}\n\nexport function UnderlineButton({\n  editor\n}) {\n  const onClick = () => {\n    editor.underline();\n  }\n  const isActive = editor.isMarkActive('underline');\n  let style = isActive ? { color: \"red\" } : {};\n\n  return <button style={style} onClick={onClick}>U</button>\n}\n\nexport function StrikeThroughButton({\n  editor\n}) {\n  const onClick = () => {\n    editor.strikeThrough();\n  }\n  const isActive = editor.isMarkActive('strikeThrough');\n  let style = isActive ? { color: \"red\" } : {};\n\n  return <button style={style} onClick={onClick}>S</button>\n}","import React from \"react\";\nimport { isKeyHotkey } from \"is-hotkey\";\n\nconst isQuoteKey = isKeyHotkey(\"mod+'\");\n\nexport function blockquotePlugin() {\n  return {\n    onKeyDown: (evt, editor, next) => {\n      if (\n        evt.key === 'Enter' &&\n        evt.shiftKey === false &&\n        editor.getCurrentBlockType() === 'blockquote') {\n        editor.insertBlock('paragraph');\n      } else if (isQuoteKey(evt)) {\n        evt.preventDefault();\n        editor\n          .focus()\n          .blockquote();\n      } else {\n        return next();\n      }\n    },\n    commands: {\n      blockquote: editor => {\n        if (editor.getCurrentBlockType() === 'blockquote') {\n          editor.setBlocks('paragraph');\n        } else {\n          editor.setBlocks('blockquote');\n        }\n      }\n    },\n    renderBlock(props, editor, next) {\n      let { node, children, attributes } = props;\n      let style = {\n        \"border-left\": \"0.3rem solid #dfe2e5\",\n        \"color\": \"#6a737d\",\n        \"padding\": \"0.5rem 1rem\"\n      }\n      return node.type === 'blockquote' ?\n        <blockquote {...attributes} style={style}>{children}</blockquote> :\n        next();\n    }\n  };\n}\n\nexport function BlockquoteButton({\n  editor\n}) {\n  const onClick = () => {\n    editor.blockquote();\n  }\n\n  const isActive = editor ? editor.getCurrentBlockType() === 'blockquote' : false;\n  let style = isActive ? { color: \"red\" } : {};\n\n  return <button style={style} onClick={onClick}>\"</button>\n}\n","import React from \"react\";\nimport { isKeyHotkey } from \"is-hotkey\";\n\nconst isH1 = isKeyHotkey(\"mod+1\");\nconst isH2 = isKeyHotkey(\"mod+2\");\nconst isP = isKeyHotkey(\"mod+p\");\n\nexport function headingPlugin() {\n  return {\n    onKeyDown(evt, editor, next) {\n      if (isH1(evt)) {\n        evt.preventDefault();\n        editor.title('h1');\n      } else if (isH2(evt)) {\n        evt.preventDefault();\n        editor.title('h2');\n      } else if (isP(evt)) {\n        evt.preventDefault();\n        editor.title('paragraph');\n      } else {\n        next();\n      }\n    },\n    commands: {\n      title(editor, type) {\n        let currentBlockType = editor.getCurrentBlockType();\n        if (currentBlockType === type) {\n          editor\n            .focus()\n            .setBlocks('paragraph');\n        } else {\n          editor\n            .focus()\n            .setBlocks(type);\n        }\n      }\n    },\n    renderBlock(props, editor, next) {\n      let { node, children, attributes } = props;\n\n      switch (node.type) {\n        case \"h1\":\n          return <h1 {...attributes}>{children}</h1>\n        case \"h2\":\n          return <h2 {...attributes}>{children}</h2>\n        default:\n          return next();\n      }\n    }\n  };\n}\n\nfunction Heading({\n  editor,\n  type\n}) {\n  const onClick = () => {\n    editor.title(type);\n  }\n\n  const isActive = editor ? editor.getCurrentBlockType() === type : false;\n  let style = isActive ? { color: \"red\" } : {};\n\n  return <button style={style} onClick={onClick}>{type}</button>\n}\n\nexport function HeadingButton(props) {\n  return (\n    <React.Fragment>\n      <Heading type=\"h1\" {...props} />\n      <Heading type=\"h2\" {...props} />\n    </React.Fragment>\n  )\n}\n","import React from 'react';\n\nexport function useEsc(cb) {\n  React.useEffect(() => {\n    function escHandler(evt) {\n      if (evt.key === 'Escape') {\n        cb(evt);\n      }\n    }\n    document.addEventListener('keydown', escHandler);\n    return () => document.removeEventListener('keypress', escHandler)\n  }, [cb]);\n}","import React from 'react';\n\nexport function Input({\n  onEnter = () => {},\n  ...restProps\n}) {\n\n  let ref = React.useRef();\n\n  React.useEffect(() => {\n    let input = ref.current;\n    let cb = (evt) => {\n      if(evt.key === 'Enter') {\n        onEnter(evt);\n      }\n    };\n    input.addEventListener('keydown', cb);\n    return () => input.removeEventListener('keydown', cb);\n  }, [onEnter]);\n\n  return (\n    <input ref={ref} {...restProps} />\n  );\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport { useEsc } from '../../hooks/use.esc';\n\nimport styles from './overlay.module.css';\n\nexport const Overlay = React.forwardRef(function Overlay({\n  children,\n  clickToClose = true,\n  shouldClose = () => true,\n  onClose = () => {},\n  onOpen = () => {},\n  className = \"\",\n  autoOpen = true,\n  ...restProps\n}, ref) {\n  let [isOpen, setOpen] = React.useState(autoOpen);\n\n  const open = React.useCallback(function open() {\n    setOpen(true);\n    onOpen();\n  }, [onOpen])\n\n  const close = React.useCallback(function close(evt) {\n    evt.stopPropagation();\n    shouldClose() &&\n    setOpen(false);\n    onClose();\n  }, [onClose, shouldClose])\n\n  //export methods for external refs\n  React.useImperativeHandle(ref, ()=> ({\n    open: open,\n    close: close\n  }), [open, close])\n\n  // auto open first time\n  React.useEffect(() => {\n    open();\n  },[open]);\n  \n  useEsc((evt) => {\n    close(evt);\n  });\n\n  return isOpen && ReactDom.createPortal(\n    <div className={`${styles.container} ${className}`} {...restProps}>\n      <div className={styles.portal} onClick={close}/>\n      <div className={styles.contentHolder}>\n      {\n        children\n      }\n      </div>\n    </div>,\n    document.body\n  );\n})","import React from 'react';\nimport isUrl from 'is-url';\n\nimport { Input } from '../widgets/input';\nimport { Overlay } from '../widgets/overlay';\n\nexport function ExternalSrcPopup({\n  title = \"\",\n  onDone = () => {}\n}){\n  let [url, setUrl] = React.useState(\"\");\n  let [error, setError] = React.useState(\"\");\n\n  function updateImageUrl(evt) {\n    let url = evt.target.value;\n    if(isUrl(url)) {\n      setUrl(url);\n    }else{\n      setError(\"Invalid url\");\n    }\n  }\n\n  return (\n    <Overlay onClose={onDone}>\n      <div className=\"card\">\n        <h2>{title}</h2>\n        <Input value={url} onChange={updateImageUrl}/>\n        {\n          error &&\n          <p className=\"error\">{error}</p>\n        }\n        <button disabled={Boolean(error)} onClick={() => onDone(url)}>Done</button>\n      </div>\n    </Overlay>\n  )\n}\n","import React from 'react';\nimport isUrl from 'is-url';\n\nimport {\n  ExternalSrcPopup\n} from '../../components/external.src.popup';\n\nexport function videoPlugin() {\n  return {\n    schema: {\n      blocks: {\n        video: {\n          isVoid: true,\n        },\n      },\n    },\n    onKeyDown(evt, editor, next) {\n      if(evt.key === 'Enter' && editor.isBlockOfType('video')) {\n        return editor.insertBlock('paragraph').focus();\n      }\n      next();\n    },\n    commands: {\n      insertVideo(editor, args) {\n        if(args && isUrl(args.src)) {\n          editor.insertBlock({\n            type: 'video',\n            data: {\n              alt: args.alt,\n              src: args.src\n            }\n          })\n          .focus();\n        }\n      }\n    },\n    renderBlock(props, editor, next) {\n      if(props.node.type === 'video') {\n        return <Video {...props} editor={editor}/>\n      }\n      return next();\n    }\n  }\n}\n\nfunction Video({\n  editor,\n  node,\n  attributes,\n  isSelected,\n  isFocused\n}) {\n\n  function parseQueryString(queryString) {\n    var assoc = {};\n    var keyValues = (queryString || window.location.search).slice(1).split('&');\n    var decode = function(s) {\n      return decodeURIComponent(s.replace(/\\+/g, ' '));\n    };\n  \n    for (var i = 0; i < keyValues.length; ++i) {\n      var key = keyValues[i].split('=');\n      if (key.length > 1) {\n        assoc[decode(key[0])] = decode(key[1]);\n      }\n    }\n  \n    return assoc;\n  }\n\n  const getProviderUrl = React.useCallback((url) => {\n    if(url.match(/https:\\/\\/([a-z]*\\.)?youtube.com/)) {\n      let queryObj = parseQueryString(`?${url.split('?')[1]}`);\n      let videoId = queryObj.v;\n      return { url: `https://www.youtube.com/embed/${videoId}?wmode=opaque`, provider: \"youtube\", id: videoId };\n    } else if(url.match(/https:\\/\\/([a-z]*\\.)?dailymotion.com/)) {\n      let videoId = url.split('/').pop();\n      return { url: `https://www.dailymotion.com/embed/video/${videoId}`, provider: \"dailymotion\", id: videoId };\n    } else if(url.match(/https:\\/\\/([a-z]*\\.)?vimeo.com/)) {\n      let videoId = url.split('/').pop();\n      return { url: `https://player.vimeo.com/video/${videoId}`, provider: \"vimeo\", id: videoId };\n    }\n\n    return { url, isNormalVideo: true };\n  }, []);\n\n  /* eslint-disable */\n  React.useEffect(() => {\n    let video = getProviderUrl(node.data.get('src'));\n    editor.setNodeByKey(node.key,\n        { \n          type: \"video\",\n          data: Object.assign(\n            node.data.toJS(),\n            {id: video.id, provider: video.provider}\n          )\n        }\n      )\n  }, []);\n\n  let style = {\n    maxWidth: \"100%\",\n    height: \"auto\",\n    textAlign: \"center\"\n  };\n  style = (isSelected || isFocused) ? Object.assign(style, {\n    border: \"2px solid red\"\n  }) : style;\n\n  let video = getProviderUrl(node.data.get('src'))\n\n  return(\n    <div style={style} {...attributes}>\n      {\n        video.isNormalVideo ?\n          (\n            <video controls>\n              <source src={video.url}/>\n            </video>\n          ) :\n          (\n            <iframe title=\"test url\" src={video.url} allowFullScreen frameBorder={0} />\n          )\n      }\n    </div>\n  );\n}\n\nexport function VideoButton({\n  editor\n}) {\n  let [showDialog, toggleDialog] = React.useState(false);\n\n  function createVideo(url) {\n    if(!url) {\n      return toggleDialog();\n    }\n    editor.insertVideo({\n      src: url,\n      alt: \"alt text\"\n    });\n    toggleDialog();\n  }\n\n  return (\n    <React.Fragment>\n      <button onClick={() => toggleDialog(!showDialog)}>Video</button>\n      {\n        showDialog &&\n        <ExternalSrcPopup title=\"Enter video url\" onDone={createVideo}/>\n      }\n    </React.Fragment>\n  )\n}","export function softBreakPlugin(options = {}) {\n  return {\n    onKeyDown(event, change, next) {\n      if (event.key !== 'Enter') return next()\n      if (options.shift && event.shiftKey === false) return next()\n      return change.insertText('\\n')\n    }\n  }\n}\n","import React from 'react';\nimport isUrl from 'is-url';\n\nimport { Input } from '../../widgets/input';\n\nimport styles from '../editor.module.css';\n\nexport function linkPlugin() {\n  return {\n    onPaste(evt, editor, next) {\n      let url = (evt.clipboardData || window.clipboardData).getData('text');\n      if(!isUrl(url)) {\n        return next();\n      }\n      \n      editor\n        .insertText(url)\n        .moveAnchorTo(editor.value.selection.anchor.offset - url.length)\n        .moveEndTo(editor.value.selection.focus.offset)\n        .toggleLink(url)\n        .moveToEnd();\n    },\n    commands: {\n      toggleLink(editor, args) {\n        if(editor.isLink()) {\n          editor.unwrapInline('link');\n        }else if(args && isUrl(args.url)) {\n          editor.wrapInline({\n            type: 'link',\n            data: {\n              url: args.url\n            }\n          });\n        }\n      },\n      updateLink(editor, args) {\n        if(editor.isLink()) {\n          editor.setInlines({\n            data: {\n              url: args.url\n            }\n          });\n        }\n      }\n    },\n    queries: {\n      isLink(editor) {\n        return editor.value.inlines.find(inline => inline.type === 'link');\n      }\n    },\n    renderInline({ node, attributes, children }, editor, next) {\n      if(node.type === 'link') {\n        return <a style={{color: \"red\"}} href={node.data.get('url')} {...attributes}>{children}</a>\n      }\n      return next();\n    }\n  }\n}\n\nexport function LinkButton({\n  editor\n}) {\n  let linkNode = editor.isLink();\n  let [showLinkBox, toggleLinkBox] = React.useState(false);\n\n  function getUrl() {\n    return linkNode ? linkNode.data.get('url') : \"\";\n  }\n\n  function toggleLink() {\n    // console.log(\"link node \", linkNode);\n    // console.log(\"url from node\", url);\n    toggleLinkBox(!showLinkBox);\n  }\n\n  function setUrl(evt) {\n    console.log(\"typed url \", evt.target.value);\n    let updatedUrl = evt.target.value;\n    if(!linkNode && updatedUrl) {\n      editor.toggleLink({\n        url: updatedUrl\n      });\n    }else if(linkNode && !updatedUrl) {\n      editor.toggleLink();\n    }else if(linkNode) {\n      editor.updateLink({\n        url: updatedUrl\n      });\n    }\n    toggleLink();\n  }\n\n  return (\n    <div className={styles.linkContainer}>\n      <button onClick={toggleLink}>Link</button>\n      {\n        showLinkBox &&\n        <div className={styles.linkBox}>\n          <Input\n            onEnter={setUrl}\n            defaultValue={getUrl()}\n            onBlur={setUrl}\n            placeholder=\"Paste url\"/>\n        </div>\n      }\n    </div>\n  )\n}\n","export const getVisibleSelectionRect = () => {\n  const selection = window.getSelection();\n  if (!selection.rangeCount) {\n    return null;\n  }\n\n  const range = selection.getRangeAt(0);\n  if (range.collapsed) {\n    return null;\n  }\n  const boundingRect = range.getBoundingClientRect();\n  const { top, right, bottom, left } = boundingRect;\n\n  if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n    return null;\n  }\n\n  return boundingRect;\n};\n","import React from 'react';\n\nimport {\n  BoldButton,\n  ItalicButton,\n  // UnderlineButton,\n  StrikeThroughButton\n} from './format';\n\nimport {\n  LinkButton\n} from './link';\n\nimport { getVisibleSelectionRect } from '../utils';\nimport { useEsc } from '../../hooks/use.esc'\n\nimport styles from '../editor.module.css';\n\nexport function inLineToolbarPlugin() {\n  return {\n    renderEditor(props, editor, next) {\n      const children = next()\n      return (\n        <React.Fragment>\n          <InlineToolbar editor={editor} />\n          {children}\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nfunction InlineToolbar({\n  editor\n}) {\n  let toolbarRef = React.useRef();\n\n  React.useEffect(() => {\n    let frameId = null;\n    if (!editor.value.selection.isExpanded) {\n      toolbarRef.current.setAttribute(\"style\", `left:-999px; top: 0px; opacity:0;`);\n    } else {\n      frameId = requestAnimationFrame(() => {\n        let selectionRect = getVisibleSelectionRect();\n        if (!selectionRect) return;\n        let sectionMidX = selectionRect.left + (selectionRect.width / 2);\n        let toolBarElemPos = toolbarRef.current.getBoundingClientRect();\n        let top = selectionRect.top - (toolBarElemPos.height + 10);\n        let left = sectionMidX - (toolBarElemPos.width / 2);\n        //find center position of select\n        if (toolbarRef.current) {\n          toolbarRef.current.setAttribute(\"style\", `left:${left}px; top: ${top}px; opacity:1;`);\n        }\n      });\n    }\n    return () => cancelAnimationFrame(frameId);\n  });\n  \n  useEsc(React.useCallback(function () {\n    toolbarRef.current.setAttribute(\"style\", `left:-999px; top: 0px; opacity:0;`);\n  }, []))\n\n  return (\n    <div ref={toolbarRef} className={styles.inlineToolbar}>\n      <BoldButton editor={editor} />\n      <ItalicButton editor={editor} />\n      {/* <UnderlineButton editor={editor} /> */}\n      {/* <StrikeThroughButton editor={editor} /> */}\n      <LinkButton editor={editor}/>\n    </div>\n  )\n}\n","import React from 'react';\nimport { isKeyHotkey } from \"is-hotkey\";\n\nconst isCodeKey = isKeyHotkey(\"mod+shift+c\");\n\nexport function codePlugin() {\n  return {\n    onKeyDown: (evt, editor, next) => {\n      if (\n        evt.key === 'Enter' &&\n        evt.metaKey === false &&\n        editor.isBlockOfType('code')) {\n        editor.insertText('\\n');\n      } else if(\n        evt.key === 'Enter' &&\n        evt.metaKey === true &&\n        editor.isBlockOfType('code')) {\n          editor\n            .insertBlock('paragraph')\n            .focus();\n      } else if (isCodeKey(evt)) {\n        evt.preventDefault();\n        editor\n          .focus()\n          .code();\n      } else {\n        return next();\n      }\n    },\n    commands: {\n      code(editor, args) {\n        if(editor.isBlockOfType('code')) {\n          editor.setBlocks({\n            type: 'paragraph',\n            data: {}\n          }).focus();\n        }else {\n          editor\n            .insertBlock(\"code\")\n            .focus();\n        }\n      }\n    },\n    renderBlock({ node, attributes, children }, editor, next) {\n      if(node.type === 'code') {\n        let style = {\n          fontFamily: \"monospace\",\n          fontSize: \"12px\",\n          padding: \"0.5rem 1rem\",\n          background: \"#ddd\",\n          display: \"block\"\n        };\n        return <code style={style} {...attributes}>{children}</code>\n      }\n      return next();\n    }\n  }\n}","const formatsSyntax = {\n  bold: (text) => `**${text}**`,\n  italic: (text) => `_${text}_`,\n  // underline: (text) => `*${text}*`,\n  strikeThrough: (text) => `~${text}~`,\n}\n\nconst blockSyntax = {\n  paragraph: (text) => (text + \"\\n\"),\n  h1: (text) => (\"# \" + text + \"\\n\"), //`# ${text}\\n\\n`,\n  h2: (text) => (\"##\" + text + \"\\n\"), //`## ${text}\\n\\n`,\n  blockquote: (text) => (\">\" + text + \"\\n\"), //`> ${text}\\n\\n`,\n  image: (text, node) => {\n    return `![${node.data.alt}](${node.data.src}) \\n`;\n  },\n  code: (text) => {\n    return \"```\\n\" + text + \"\\n```\\n\";\n  },\n  video: (text, node) => {\n    return `{% ${node.data.provider} ${node.data.id} %} \\n`\n  }\n}\n\nexport function markdown(slateJson) {\n  let str = \"\";\n  for (let node of slateJson.document.nodes) {\n    str = str + serializeBlock(node);\n  }\n  console.log(\"markdown string\", str);\n  return str;\n}\n\nfunction serializeBlock(blockNode) {\n  let str = \"\";\n  for (let node of blockNode.nodes) {\n    str = str + (node.object === 'inline' ? serializeInline(node) : serializeText(node));\n  }\n  return blockSyntax[blockNode.type](str, blockNode);\n}\n\nfunction serializeInline(node) {\n  let str = ``;\n  if(node.type === 'link') {\n    let linkText = node.nodes.map(serializeText).join('');\n    str = `[${linkText}](${node.data.url})`\n  }\n  return str\n}\n\nfunction serializeText(textNode) {\n  let str = textNode.text;\n  for (let mark of textNode.marks || []) {\n    str = formatsSyntax[mark.type](str);\n  }\n  return str;\n}\n","import React from 'react';\n\nconst cache = {};\nexport function useCache(name) {\n  const setValue = React.useCallback(function setValue(value){\n    if(value === null) {\n      delete cache[name];\n    }else {\n      cache[name] = value;\n    }\n  }, [name])\n  const getValue = React.useCallback(function getValue() {\n    return cache[name];\n  }, [name])\n  return [getValue, setValue];\n}","import React, { useState } from 'react';\nimport { Value } from 'slate';\nimport { Editor } from 'slate-react';\n\nimport {\n  utilPlugin,\n  formatPlugin,\n  blockquotePlugin,\n  headingPlugin,\n  codePlugin,\n  softBreakPlugin,\n  linkPlugin,\n  // placeholderPlugin,\n  inLineToolbarPlugin,\n  imagePlugin,\n  videoPlugin\n} from './plugins';\n\nimport { markdown } from './markdown.serializer';\nimport { useCache } from '../hooks/use.cache';\n\nimport styles from './editor.module.css';\n\nconst defaultValue = {\n  \"object\": \"value\",\n  \"document\": {\n    \"object\": \"document\",\n    \"nodes\": [\n      {\n        \"object\": \"block\",\n        \"type\": \"paragraph\",\n        \"nodes\": [\n          {\n            \"object\": \"text\",\n            \"text\": \"\"\n          }\n        ]\n      }\n    ]\n  }\n}\n\nexport const DevEditor = React.forwardRef(function DevEditor({\n  placeholder\n}, ref) {\n  let [value, setValue] = useState(Value.fromJSON(defaultValue));\n  let [getCache, setCache] = useCache('editor');\n  let editor = React.useRef();\n\n  const plugins = React.useMemo(() => [\n    utilPlugin(),\n    formatPlugin(),\n    blockquotePlugin(),\n    headingPlugin(),\n    linkPlugin(),\n    softBreakPlugin({ shift: true }),\n    imagePlugin(),\n    videoPlugin(),\n    inLineToolbarPlugin(),\n    // placeholderPlugin(),\n    codePlugin(),\n  ], [])\n\n  function onChange(change) {\n    // console.log(\"js \", change.value.toJS());\n    setValue(change.value);\n  }\n\n  const editorInterface = React.useMemo(() => {\n    let obj = {\n      markdown: () => markdown(value.toJS()),\n      insertImage: (url, altText = \"\") => {\n        editor.current\n          .focus()\n          .insertImage({\n            src: url,\n            alt: altText\n          });\n      },\n      insertVideo: (url) => {\n        editor.current\n          .focus()\n          .insertVideo({\n            src: url\n          });\n      },\n      h1() {\n        editor.current\n          .focus()\n          .title('h1');\n      },\n      h2() {\n        editor.current\n          .focus()\n          .title('h2');\n      },\n      quote() {\n        editor.current\n          .focus()\n          .blockquote();\n      },\n      code() {\n        editor.current\n          .focus()\n          .code();\n      },\n      insertEmbedText(text) {\n        editor.current\n          .focus()\n          .insertBlock('paragraph')\n          .focus()\n          .insertText(text);\n      }\n    };\n    console.log(\"setting editor in cache\");\n    setCache(obj);\n    return obj;\n  }, [value, editor, setCache]);\n\n\n\n  React.useImperativeHandle(ref, () => {\n    return editorInterface\n  });\n\n  return (\n    <Editor\n      ref={editor}\n      placeholder={placeholder}\n      className={styles.editor}\n      onChange={onChange}\n      value={value}\n      plugins={plugins} />\n  )\n})\n\n","export function utilPlugin() {\n  return {\n    queries: {\n      isMarkActive: (editor, markType) => {\n        return editor.value.activeMarks.some(mark => mark.type === markType);\n      },\n      isBlockOfType: function hasBlock(editor, blockType) {\n        return editor.value.blocks.some(block => block.type === blockType);\n      },\n      hasSelection(editor) {\n        //check whether texts are selected\n        return editor.value.selection.isExpanded;\n      },\n      getCurrentBlockType(editor) {\n        return editor.value.startBlock ? editor.value.startBlock.type : \"\";\n      }\n    }\n  };\n}\n","import React from 'react';\nimport isUrl from 'is-url';\n\nimport {\n  ExternalSrcPopup\n} from '../../components/external.src.popup';\n\nexport function imagePlugin() {\n  return {\n    schema: {\n      blocks: {\n        image: {\n          isVoid: true,\n        },\n      },\n    },\n    onKeyDown(evt, editor, next) {\n      if(evt.key === 'Enter' && editor.isBlockOfType('image')) {\n        return editor.insertBlock('paragraph').focus();\n      }\n      next();\n    },\n    commands: {\n      insertImage(editor, args) {\n        if(args && isUrl(args.src)) {\n          editor.insertBlock({\n            type: 'image',\n            data: {\n              alt: args.alt,\n              src: args.src\n            }\n          })\n          .focus();\n        }\n      }\n    },\n    renderBlock({ node, attributes, isSelected, isFocused }, editor, next) {\n      if(node.type === 'image') {\n        let style = {\n          maxWidth: \"100%\",\n          height: \"auto\"\n        };\n        style = (isSelected || isFocused) ? Object.assign(style, {\n          border: \"2px solid red\"\n        }) : style;\n        return <img style={style} alt={node.data.get('alt')} src={node.data.get('src')} {...attributes}/>\n      }\n      return next();\n    }\n  }\n}\n\nexport function ImageButton({\n  editor\n}) {\n  let [showDialog, toggleDialog] = React.useState(false);\n\n  function createImage(url) {\n    if(!url) {\n      return toggleDialog();\n    }\n    editor.insertImage({\n      src: url,\n      alt: \"alt text\"\n    });\n    toggleDialog();\n  }\n\n  return (\n    <React.Fragment>\n      <button onClick={() => toggleDialog(!showDialog)}>Img</button>\n      {\n        showDialog &&\n        <ExternalSrcPopup title=\"Enter image url\" onDone={createImage}/>\n      }\n    </React.Fragment>\n  )\n}\n","import React from 'react';\n\nimport { useCache } from '../hooks/use.cache';\nimport { \n  ExternalSrcPopup\n} from '../components/external.src.popup';\n\nimport styles from './home.module.css';\n\nexport function ToolBox() {\n  let [getEditor] = useCache('editor');\n  let [showPopup, togglePopup] = React.useState(false);\n  let [type, setType] = React.useState('');\n\n  const extSrcs = {\n    IMAGE: 'image',\n    VIDEO: 'video'\n  }\n\n  const embeds = [\n    {\n      id: 'tag',\n      label: 'Tag',\n      text: \"{% tag <user> %}\"\n    },\n    {\n      id: 'github',\n      label: 'Github',\n      text: \"{% github <url> %}\"\n    },\n    {\n      id: 'gist',\n      label: 'Gists',\n      text: \"{% gist <url> %}\"\n    },\n    {\n      id: 'glitch',\n      label: 'Glitch',\n      text: \"{% glitch <glitch_id> %}\"\n    },\n    {\n      id: 'codepen',\n      label: 'Codepen',\n      text: \"{% codepen <url> %}\"\n    },\n    {\n      id: 'codesandbox',\n      label: 'Code sandbox',\n      text: \"{% codesandbox <box_id> %}\"\n    },\n    {\n      id: 'jsfiddle',\n      label: 'Js fiddle',\n      text: \"{% jsfiddle <fiddle_url> result,html,css %}\"\n    },\n    {\n      id: 'medium',\n      label: 'Medium',\n      text: \"{% medium <url> %}\"\n    },\n    {\n      id: 'twitter',\n      label: 'Twitter',\n      text: \"{% twitter <tweet_id> %}\"\n    },\n    {\n      id: 'instagram',\n      label: 'Instagram',\n      text: \"{% instagram <insta_id> %}\"\n    },\n    {\n      id: 'slideshare',\n      label: 'Slide share',\n      text: \"{% slideshare <slide_id> %}\"\n    },\n  ]\n\n  const onDone = (url) => {\n    if(!url) {\n      return togglePopup(false);\n    }\n    switch(type) {\n      case extSrcs.IMAGE:\n        getEditor().insertImage(url);\n        break;\n      case extSrcs.VIDEO:\n        getEditor().insertVideo(url);\n        break;\n      default:\n        //\n    }\n    togglePopup(false);\n  }\n\n  const openExtSrc = (type) => {\n    setType(type);\n    togglePopup(true);\n  }\n\n  const embedExtSrc = (embed) => {\n    getEditor().insertEmbedText(embed.text);\n  }\n  \n  return (\n    <div className={`card ${styles.toolBox}`}>\n      <div\n        title=\"Meta+1\"\n        className={styles.tool}\n        onClick={() => getEditor().h1()}>H1</div>\n      <div\n        title=\"Meta+2\"\n        className={styles.tool}\n        onClick={() => getEditor().h2()}>H2</div>\n      <div\n        title=\"Meta+'\"\n        className={styles.tool}\n        onClick={() => getEditor().quote()}>Quote</div>\n      <div\n        title=\"Meta+Shift+c\"\n        className={styles.tool}\n        onClick={() => getEditor().code()}>Code</div>\n      <div\n        title=\"Meta+Shift+i\"\n        className={styles.tool}\n        onClick={() => openExtSrc(extSrcs.IMAGE)}>Img</div>\n      <div\n        title=\"Meta+Shift+v\"\n        className={styles.tool}\n        onClick={() => openExtSrc(extSrcs.VIDEO)}>Video</div>\n      {\n        embeds.map(embed => (\n          <div\n            title={embed.id}\n            className={styles.tool}\n            onClick={() => embedExtSrc(embed)}>{embed.label}</div>\n        ))\n      }\n      {\n        showPopup &&\n        <ExternalSrcPopup title={`Enter ${type} url`} onDone={onDone} />\n      }\n    </div>\n  )\n}","import React from 'react';\n\nimport { Banner } from './banner';\nimport { DevEditor } from '../editor';\n\nimport { ToolBox } from './toolbox';\n\nimport styles from './home.module.css';\n\nexport function Home() {\n  let editorRef = React.useRef();\n\n  function getMarkdown() {\n    return editorRef.current.markdown()\n  }\n\n  return (\n    <div className={styles.container}>\n      <Banner />\n      <div className={styles.contentContainer}>\n        <div className={styles.widgetContainers}>\n          <ToolBox />\n        </div>\n        <div className={styles.editor}>\n          <DevEditor ref={editorRef} placeholder=\"Write your thoughts...\" />\n        </div>\n        <div className={styles.widgetContainers}>\n          <PublishSection getMarkdown={getMarkdown} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction PublishSection({\n  getMarkdown\n}) {\n\n  let [isCopied, setCopied] = React.useState(false);\n\n  function copyToClipboard() {\n    let str = getMarkdown();\n    let elem = document.createElement('textarea');\n    elem.value = str;\n    elem.setAttribute('style', \"position:fixed; top: '0px';\");\n    document.body.appendChild(elem);\n    elem.select();\n    document.execCommand('copy');\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000)\n  }\n\n  return (\n    <div className={`card ${styles.publishBox}`}>\n      <button onClick={copyToClipboard}>\n        {isCopied ? 'copied to clipboard' : 'copy as markdown'}\n      </button>\n    </div>\n  )\n}","import React from 'react';\n\nimport {\n  Home\n} from './home';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"overlay_container__v_0zg\",\"portal\":\"overlay_portal__3pynQ\",\"contentHolder\":\"overlay_contentHolder__1PFPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner_banner__328vH\",\"heading\":\"banner_heading__3f1uW\"};"],"sourceRoot":""}